AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Testing area for AWS:This CloudFormation template provisions the necessary AWS resources, including a VPC, subnet, security group, and an EC2 instance for testing and development purposes.
Parameters:
  KeyName:vockey
    Description: The EC2 KeyPair name to authenticate and allow SSH access to the EC2 instance.
    Type: rsa
    ConstraintDescription: Have to be the name of an existing EC2 KeyPair in my AWS account.
  SSHLocation: 130.108.104.16
    Description: ' The IP address range that can be used to access the EC2 instance'
    Type: String
    MinLength: '9' # 1.1.1.1/0
    MaxLength: '18' # 255.255.255.255/32
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSRegionAMI: # AMI for Ubuntu server in each supported region 
    us-east-2: #Ohio  
      HVM64: ami-00402f0bdf4996822 
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.18.0.0/23
      Tags:
        - Key: Application
          Value: 'AWS::StackId'
        - Key: Name
          Value: Melson VPC
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.18.0.0/24
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: subnet-0a76a4a0fd7985a9b
      RouteTableId: rtb-027afdfb426917e1c
  UbuntuIPAddress:
    Type: 'AWS::EC2::EIP'
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      InstanceId: i-01c03dfe3b672ec45
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: vpc-05bfad42453eea9dd  
      GroupDescription: Enable SSH access via port 22 and open all insternal ports.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 130.108.104.16/32
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 130.108.0.0/16  # WSU CIDR
        - IpProtocol: -1
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 10.0.0.0/24
        - IpProtocol: tcp
          FromPort: '1'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
  NetworkACL:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: vpc-0c1dcd91e867686c8
      Tags:
        - Key: Name
          Value: Melson
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InboundAllowAllRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: acl-0e068d7bb2c40396d
      RuleNumber: 100
      Protocol: -1
      Egress: false
      RuleAction: allow
      CidrBlock: 130.108.104.16/32
      PortRange:
        From: 22
        To: 22
  OutboundAllowAllRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: acl-0e068d7bb2c40396d
      RuleNumber: 100
      Protocol: tcp
      Egress: true
      RuleAction: allow
      CidrBlock: 130.108.0.0/16
  SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: Subnet - subnet-0a76a4a0fd7985a9b
      NetworkAclId:
        Ref: NetworkACL - acl-0e068d7bb2c40396d
  PublicUbuntuInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn: AttachGateway
    Properties:
      ImageId: ami-00402f0bdf4996822 
      InstanceType: t2.micro
      KeyName: vockey
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: Melson
      NetworkInterfaces:
        - GroupSet:
            - sg-0dec79cb768b0d6c9
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: subnet-0a76a4a0fd7985a9b
          PrivateIpAddress: 172.18.0.0/24
      UserData:
      Fn::Base64:
        !Sub |
          #!/bin/bash -xe

          # Update the system packages
          apt-get update && \
          apt-get upgrade -y

          # Install required software
          apt-get install -y \
            git \
            python3 \
            python3-pip \
            apache2 \
            wamerican

          # Set the instance hostname
          hostnamectl set-hostname Melson-Instance

          # Copy wordle.sh to the home directory
          cp /home/ubuntu/wordle.sh /home/ubuntu/

          # Copy index.html to the Apache web directory
          cp /home/ubuntu/index.html /var/www/html/

          # Reboot the instance
          reboot
